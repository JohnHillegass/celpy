# Makefile for python interface for package ext.
# File is generated by gopy. Do not edit.
# gopy build -output=ext github.com/google/cel-go/ext

GOCMD=go
GOBUILD=$(GOCMD) build
GOIMPORTS=goimports
PYTHON=/Users/johnhillegass/Library/Caches/pypoetry/virtualenvs/py-cel-JiNhAeSg-py3.7/bin/python
LIBEXT=.so

# get the CC and flags used to build python:
GCC = $(shell $(GOCMD) env CC)
CFLAGS = -I/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/include/python3.7m
LDFLAGS = -L/usr/local/opt/python/Frameworks/Python.framework/Versions/3.7/lib -lpython3.7m -ldl  -framework CoreFoundation 

all: gen build

gen:
	gopy gen github.com/google/cel-go/ext

build:
	# build target builds the generated files -- this is what gopy build does..
	# this will otherwise be built during go build and may be out of date
	- rm ext.c
	# goimports is needed to ensure that the imports list is valid
	$(GOIMPORTS) -w ext.go
	# generate ext_go$(LIBEXT) from ext.go -- the cgo wrappers to go functions
	$(GOBUILD) -buildmode=c-shared -o ext_go$(LIBEXT) ext.go
	# use pybindgen to build the ext.c file which are the CPython wrappers to cgo wrappers..
	# note: pip install pybindgen to get pybindgen if this fails
	$(PYTHON) build.py
	# patch storage leaks in pybindgen output
	go run patch-leaks.go ext.c
	# build the _ext$(LIBEXT) library that contains the cgo and CPython wrappers
	# generated ext.py python wrapper imports this c-code package
	$(GCC) ext.c -dynamiclib ext_go$(LIBEXT) -o _ext$(LIBEXT) $(CFLAGS) $(LDFLAGS) -fPIC --shared -w
	


